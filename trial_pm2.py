# -*- coding: utf-8 -*-
"""Trial_PM2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nw2fxiGdpC7f9_lvvFi3Lgi_sCXb0Dny
"""

# /// script
# requires-python = ">=3.11"
# dependencies = [
#
#   "pandas",
#
#
#   "argparse",
#    "chardet",
# "requests",
# "openai"
# ]
# ///



import pandas as pd
import chardet
import argparse
import requests
import os
import openai
import json

def detect_encoding(this_file):
    with open(this_file, 'rb') as rawdata:
        result = chardet.detect(rawdata.read(10000))  # Read a chunk of the file
    return result['encoding']

def analyse_csv(given_file):

  given_file_df = pd.read_csv(given_file, encoding=detect_encoding(given_file))
  #print(given_file_df.head()
  return json.dumps(given_file_df.columns.tolist())

print(analyse_csv("Nifty.csv"))

narrative =analyse_csv("Nifty.csv")

def main(file_path):
    f_name = os.path.splitext(os.path.basename(file_path))[0]
    dir_name = f_name
    output_dir = os.path.join(os.getcwd(), dir_name)
    os.makedirs(output_dir, exist_ok=True)
    readme_path = os.path.join(output_dir, 'README.md')
    #image_paths =
    # Save narrative and embed images
    with open(readme_path, 'w') as f:
        f.write(narrative)
        f.write("\n\n## Visualizations\n")
        #for img in image_paths:
            #f.write(f"![{os.path.basename(img)}]({os.path.basename(img)})\n")

#main("Nifty.csv")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Analyse a csv file")
    parser.add_argument("this_csvFile",help="the csv File to be analysed")
    arg_fname = parser.parse_args()

    main(arg_fname.this_csvFile)